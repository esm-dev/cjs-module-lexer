[package]
name = "esm-cjs-lexer"
version = "0.11.1"
description = "A WASM module to parse the `module.exports` of a commonjs module."
repository = "https://github.com/esm-dev/esm-cjs-lexer"
license = "MIT"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
indexmap = "2.2.6"
serde = { version = "1.0.203", features = ["derive"] }

# swc
# docs: https://swc.rs
# crate: https://crates.io/search?q=swc
swc_common = { version = "0.33.26", features = ["sourcemap"] }
swc_ecmascript = { version = "0.242.0", features = ["parser", "visit"] }
swc_ecma_ast = "0.113.7"
swc_ecma_visit = "0.99.1"

# wasm-bindgen
# docs: https://rustwasm.github.io/docs/wasm-bindgen
wasm-bindgen = { version = "0.2.92", features = ["serde-serialize"] }
serde-wasm-bindgen = "0.6.5"
getrandom = { version = "0.2.15", features = ["js"] }

[profile.release]
# less code to include into binary
panic = 'abort'
# optimization over all codebase (better optimization, slower build)
codegen-units = 1
# optimization for size (more aggressive)
opt-level = 'z'
# optimization for size
# opt-level = 's'
# link time optimization using using whole-program analysis
lto = true
